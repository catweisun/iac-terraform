parameters:
  skip: false

steps:
  - task: AzureCLI@1
    displayName: 'Unit Test Terraform Template'
    condition: not(coalesce(variables.SKIP_TESTS, ${{ parameters.skip }}))
    env:
      TF_VAR_remote_state_container: $(REMOTE_STATE_CONTAINER)
      TF_VAR_remote_state_account: $(REMOTE_STATE_ACCOUNT)
    inputs:
      azureSubscription: '$(SERVICE_CONNECTION_NAME)'
      addSpnToEnvironment: true
      scriptLocation: inlineScript
      inlineScript: |
        #!/usr/bin/env bash

        set -euo pipefail

        export ARM_SUBSCRIPTION_ID=$(az account show --query id -otsv)
        export ARM_TENANT_ID=$tenantId
        export ARM_CLIENT_SECRET=$servicePrincipalKey
        export ARM_CLIENT_ID=$servicePrincipalId
        export ARM_ACCESS_KEY=$(az storage account keys list --subscription "$ARM_SUBSCRIPTION_ID" --account-name "$TF_VAR_remote_state_account" --query "[0].value" --output tsv)



        env | grep ARM
        env | grep TF


        function storageAccountPrimaryKey() {
            az storage account keys list --subscription "$ARM_SUBSCRIPTION_ID" --account-name "$TF_VAR_remote_state_account" --query "[0].value" --output tsv
        }



        # 
        # export ARM_CLIENT_SECRET="$servicePrincipalKey"
        # export ARM_CLIENT_ID="$servicePrincipalId"
        # export ARM_TENANT_ID=$(azureTenantId)

        # cd "$ARTIFACT_ROOT"/"$TERRAFORM_TEMPLATE_PATH"

        # # Setting the scripts to be run as executable
        # chmod -fR 755 *.sh || true

        # echo "-------DEBUG-------"
        # echo $ARM_ACCESS_KEY
        # echo $ARM_CLIENT_SECRET
        # echo $ARM_CLIENT_ID
        # echo $ARM_TENANT_ID

        # go test -v $(go list ./... | grep "$TERRAFORM_TEMPLATE_PATH" | grep "unit")